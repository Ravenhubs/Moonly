local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Moonly v2",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Rayfield Interface Suite",
   LoadingSubtitle = "By ken",
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = true, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "https://discord.gg/tgDgHgyBEz", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local Tab = Window:CreateTab("Main", 4483362458) -- Title, Image

local Section = Tab:CreateSection(".")

local Divider = Tab:CreateDivider()

Rayfield:Notify({
   Title = "Discord",
   Content = "Make sure to join our discord:)",
   Duration = 6.5,
   Image = 4483362458,
})

local Button = Tab:CreateButton({
   Name = "Grab ball",
   Callback = function()
       local ball = game.Workspace:FindFirstChild("Football")

       if ball and ball:IsA("BasePart") then
            local player = game.Players.LocalPlayer
            local character = player.Character or player.CharacterAdded:Wait()

            if character then
                local rootPart = character:FindFirstChild("HumanoidRootPart")
                if rootPart then
                    ball.CFrame = rootPart.CFrame
                    print("Soccer ball teleported to your character!")
                    -- Support Delta functionality (example of using Delta's teleport feature)
                    -- If Delta allows teleporting, you could add something like:
                    -- Delta.Teleport(ball.Position) -- Example (check Delta docs for specifics)
                else
                    warn("HumanoidRootPart not found in character.")
                end
            else
                warn("Character not found.")
            end
        else
            warn("Soccer ball not found or is not a BasePart.")
        end
   end,
})

-- Example of integrating Delta (add your Delta specific code here):
-- Assuming Delta provides some custom functions, you could call them here:

local deltaButton = Tab:CreateButton({
   Name = "Use Delta Feature",
   Callback = function()
       -- Example: if Delta has a feature to teleport or perform actions, add it here
       if Delta then
           Delta.Teleport(game.Workspace.SomePart.Position)  -- Example, adjust based on Delta's capabilities
           print("Delta Teleport activated!")
       else
           warn("Delta not found or not loaded.")
       end
   end,
})
